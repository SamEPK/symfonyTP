security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        users_in_memory: { memory: null }
        user_in_database:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_ADMIN
        ROLE_ADMIN: ROLE_USER
        ROLE_USER:
        ROLE_BANNED:

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: user_in_database
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                csrf_parameter: _csrf_token  
                csrf_token_id: authenticate 
                username_parameter: email
                password_parameter: password
            logout:
                path: app_logout

    access_control:
        # Autoriser l'accès aux pages "new" pour les utilisateurs avec le rôle ROLE_USER
        - { path: ^/topic/new, roles: ROLE_USER }
        - { path: ^/user/new, roles: ROLE_USER }
        - { path: ^/reponse/new, roles: ROLE_USER }
        # - { path: ^/categorie/new, roles: ROLE_USER }

        # Bloquer l'accès aux autres routes pour les non-administrateurs
        # - { path: ^/topic, roles: ROLE_ADMIN }
        - { path: ^/user, roles: ROLE_ADMIN }
        - { path: ^/langue, roles: ROLE_ADMIN }
        - { path: ^/reponse, roles: ROLE_ADMIN }
        - { path: ^/categorie, roles: ROLE_ADMIN }


when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
